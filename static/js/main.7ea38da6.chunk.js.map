{"version":3,"sources":["helpers/theme.js","components/molecules/ListWrapper/index.js","components/molecules/StyledForm/index.js","components/atoms/Input/components/Text/index.js","components/atoms/Input/components/Button/index.js","components/atoms/Input/index.js","components/atoms/ToDoItem/index.js","components/pages/Home/index.js","components/pages/About/index.js","components/organisms/Navbar/index.js","App.js","index.js"],"names":["colors","primary","secondary","dark","white","coral","alert","breakpoints","mobile","desktop","styled","ul","StyledForm","form","TextInput","input","Button","button","props","theme","color","Input","type","Text","Error","renderInput","li","isCrossed","StyledInputText","inputError","StyledInputSubmit","NewToDo","onFormSubmit","onInputChange","value","textInputProps","autoFocus","onChange","placeholder","onSubmit","Wrap","div","StyledToDoItem","ToDoItem","ToDoList","memo","todos","crossToDo","deleteToDo","length","ListWrapper","map","todo","index","key","onClick","prevProps","nextProps","AppWrap","defaultProps","Home","useState","setValue","setTodos","setInputError","newTodoProps","e","target","preventDefault","Math","random","toFixed","todoListProps","oldToDos","firstHalf","slice","secondHalf","nav","to","App","Navbar","path","component","exact","About","ReactDOM","render","document","getElementById"],"mappings":"yNAAe,GACbA,OAAQ,CACNC,QAAS,UACTC,UAAW,UACXC,KAAM,UACNC,MAAO,UACPC,MAAO,UACPC,MAAO,WAGTC,YAAa,CACXC,OAAQ,GACRC,QAAS,K,kICVEC,UAAOC,GAAtB,K,iICAA,IAMeC,EANIF,IAAOG,KAAV,K,gOCAhB,IAUeC,EAVGJ,IAAOK,MAAV,K,+OCAf,IAYeC,EAZAN,IAAOO,OAAV,KACI,SAACC,GAAD,OAAWA,EAAMC,MAAMnB,OAAOkB,EAAME,QAAUF,EAAMC,MAAMnB,OAAOE,aACtE,SAACgB,GAAD,OAAWA,EAAMC,MAAMnB,OAAOI,SCY1BiB,EAFD,SAACH,GAAD,OAXM,SAAC,GAAwB,IAAtBI,EAAqB,EAArBA,KAASJ,EAAY,wBAC1C,OAAQI,GACN,IAAK,OACH,OAAO,kBAACC,EAASL,GACnB,IAAK,SACH,OAAO,kBAAC,EAAWA,GACrB,QACE,MAAM,IAAIM,MAAM,wCAIGC,CAAYP,I,6SCZtBR,UAAOgB,GAAtB,KAO6B,SAACR,GAAD,OAAWA,EAAMC,MAAMnB,OAAOC,WAIvD,SAACiB,GAAD,OAAYA,EAAMS,UAAN,uG,qkBCOhB,IAAMC,EAAkBlB,YAAOW,EAAPX,CAAH,KAKjB,SAACQ,GAAD,OAAYA,EAAMW,WAAN,yCACeX,EAAMC,MAAMnB,OAAOM,MADlC,kDAGeY,EAAMC,MAAMnB,OAAOE,UAHlC,YAOV4B,EAAoBpB,YAAOW,EAAPX,CAAH,KAGnB,SAACQ,GAAD,OAAYA,EAAMW,WAAN,kCACQX,EAAMC,MAAMnB,OAAOM,MAD3B,SAEV,MAGAyB,EAAU,SAAC,GAEV,IADLC,EACI,EADJA,aAAcC,EACV,EADUA,cAAeC,EACzB,EADyBA,MAAOL,EAChC,EADgCA,WAE9BM,EAAiB,CACrBb,KAAM,OACNc,WAAW,EACXC,SAAUJ,EACVK,YAAaT,GAAc,eAC3BK,QACAL,cAEF,OACE,kBAAC,EAAD,CAAYU,SAAUP,GACpB,kBAACJ,EAAoBO,GACrB,kBAACL,EAAD,CAAmBR,KAAK,SAASO,WAAYA,GAA7C,cAKAW,EAAO9B,IAAO+B,IAAV,KAKJC,EAAiBhC,YAAOiC,EAAPjC,CAAH,KAIdkC,EAAWC,gBAAK,YAAuC,IAApCC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WACzC,OAAqB,IAAjBF,EAAMG,OACD,KAGP,kBAACC,EAAD,KACGJ,EAAMK,KAAI,SAACC,EAAMC,GAAP,OACT,kBAACb,EAAD,CAAMc,IAAKF,EAAKE,KACd,kBAACZ,EAAD,CACEf,UAAWyB,EAAKzB,UAChB4B,QAAS,kBAAMR,EAAUM,KAExBD,EAAKlB,OAER,kBAACJ,EAAD,CAAmBR,KAAK,SAASF,MAAM,UAAUmC,QAAS,kBAAMP,EAAWK,KAA3E,uBAOP,SAACG,EAAWC,GAAZ,OAA0BD,EAAUV,QAAUW,EAAUX,SAIrDY,EAAUhD,IAAO+B,IAAV,KAiFbV,EAAQ4B,aAAe,CACrB9B,WAAY,IAGC+B,MAhFF,WAAO,IAAD,EACSC,mBAAS,IADlB,mBACV3B,EADU,KACH4B,EADG,OAESD,mBAAS,IAFlB,mBAEVf,EAFU,KAEHiB,EAFG,OAGmBF,mBAAS,IAH5B,mBAGVhC,EAHU,KAGEmC,EAHF,KAuCjB,IAAMC,EAAe,CACnBhC,cApBF,SAAuBiC,GACrBJ,EAASI,EAAEC,OAAOjC,OACdL,GACFmC,EAAc,KAkBhBhC,aApCF,SAAsBkC,GAEpB,GADAA,EAAEE,iBACGlC,EAEE,CACL,IAAMkB,EAAO,CACXlB,QACAP,WAAW,EACX2B,IAAI,GAAD,OAAKpB,GAAL,OAAamC,KAAKC,SAASC,QAAQ,KAExCR,EAAS,GAAD,mBAAKjB,GAAL,CAAYM,KACpBU,EAAS,SARTE,EAAc,qBAkChB9B,QACAL,cAGI2C,EAAgB,CACpB1B,QACAC,UArBF,SAAmBM,GACjB,IAAMoB,EAAQ,YAAO3B,GACrB2B,EAASpB,GAAO1B,WAAa8C,EAASpB,GAAO1B,UAC7CoC,EAASU,IAmBTzB,WAhBF,SAAoBK,GAClB,IAAMqB,EAAY5B,EAAM6B,MAAM,EAAGtB,GAC3BuB,EAAa9B,EAAM6B,MAAMtB,EAAQ,EAAGP,EAAMG,QAChDc,EAAS,GAAD,mBAAKW,GAAL,YAAmBE,OAgB7B,OACE,kBAAClB,EAAD,KACE,kBAAC,EAAYO,GACb,kBAACrB,EAAa4B,KCvJL,oBAAM,sC,4XCErB,IAAMhC,EAAO9B,IAAOmE,IAAV,KAQM,SAAC3D,GAAD,OAAWA,EAAMC,MAAMnB,OAAOC,WAa/B,oBACb,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAM6E,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,WCRWC,EAZH,kBACV,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAe5D,MAAOA,GACpB,kBAAC6D,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWtB,EAAMuB,OAAK,IACtC,kBAAC,IAAD,CAAOF,KAAK,SAASC,UAAWE,EAAOD,OAAK,QCVpDE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.7ea38da6.chunk.js","sourcesContent":["export default {\n  colors: {\n    primary: '#9FD356',\n    secondary: '#3C91E6',\n    dark: '#342E37',\n    white: '#FAFFFD',\n    coral: '#FA824C',\n    alert: '#EA3546',\n  },\n  // TODO: add response design breakpoints in px?\n  breakpoints: {\n    mobile: '',\n    desktop: '',\n  },\n};\n","import styled from '@emotion/styled';\n\nexport default styled.ul`\n  margin: 0;\n  padding: 0;\n`;\n","import styled from '@emotion/styled';\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n`;\n\nexport default StyledForm;\n","import styled from '@emotion/styled';\n\nconst TextInput = styled.input`\n  height: 40px;\n  border: 1px solid #eee;\n  padding: 0 20px;\n  font-size: 0.8rem;\n  margin: 0;\n  box-sizing: border-box;\n  outline: none;\n`;\n\nexport default TextInput;\n","import styled from '@emotion/styled';\n\nconst Button = styled.button`\n  background: ${(props) => props.theme.colors[props.color] || props.theme.colors.secondary};\n  color: ${(props) => props.theme.colors.white};\n  padding: 0 20px;\n  font-weight: bold;\n  cursor: pointer;\n  height: 40px;\n  border: 0;\n  font-size: 0.8rem;\n  outline: none;\n`;\n\nexport default Button;\n","import React from 'react';\nimport { Text, Button } from './components';\n\nconst renderInput = ({ type, ...props }) => {\n  switch (type) {\n    case 'text':\n      return <Text {...props} />;\n    case 'submit':\n      return <Button {...props} />;\n    default:\n      throw new Error('Input must be one of [text, submit]');\n  }\n};\n\nconst Input = (props) => renderInput(props);\n\nexport default Input;\n","import styled from '@emotion/styled';\n\nexport default styled.li`\n  height: 40px;\n  padding: 0 20px;\n  list-style: none;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  border-bottom: 1px solid ${(props) => props.theme.colors.primary};\n  box-sizing: border-box;\n  transition: 0.3s;\n  user-select: none;\n  ${(props) => (props.isCrossed ? `\n    text-decoration: line-through;\n    opacity: 0.6;\n  ` : `\n    text-decoration: initial;\n  `)}\n`;\n","import React, { useState, memo } from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\nimport { StyledForm, ListWrapper } from '../../molecules';\nimport { Input, ToDoItem } from '../../atoms';\n\n/**\n * Sun 15 plan\n * objects and syntax obj[const] obj.const || 'default' etc.. props = {...a, props};\n * styled component - error handling\n * onclick turn all to crossed out back and forth\n * /about page\n * styleguidist documentation?\n * hocs - basic! authentication\n */\n\n/**\n  * input - regex whitespaces\n  */\n\nconst StyledInputText = styled(Input)`\n  flex: 0.8;\n  box-sizing: border-box;\n  border: 0;\n  transition: 0.2s;\n  ${(props) => (props.inputError ? `\n    border-bottom: 1px solid ${props.theme.colors.alert};\n  ` : `\n    border-bottom: 1px solid ${props.theme.colors.secondary};\n  `)};\n`;\n\nconst StyledInputSubmit = styled(Input)`\n  flex: 0.2;\n  transition: 0.2s;\n  ${(props) => (props.inputError ? `\n    background-color: ${props.theme.colors.alert};\n  ` : '')}\n `;\n\nconst NewToDo = ({\n  onFormSubmit, onInputChange, value, inputError,\n}) => {\n  const textInputProps = {\n    type: 'text',\n    autoFocus: true,\n    onChange: onInputChange,\n    placeholder: inputError || 'Add new task',\n    value,\n    inputError,\n  };\n  return (\n    <StyledForm onSubmit={onFormSubmit}>\n      <StyledInputText {...textInputProps} />\n      <StyledInputSubmit type=\"submit\" inputError={inputError}>Add task</StyledInputSubmit>\n    </StyledForm>\n  );\n};\n\nconst Wrap = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst StyledToDoItem = styled(ToDoItem)`\n  flex: 0.8;\n`;\n\nconst ToDoList = memo(({ todos, crossToDo, deleteToDo }) => {\n  if (todos.length === 0) {\n    return null;\n  }\n  return (\n    <ListWrapper>\n      {todos.map((todo, index) => (\n        <Wrap key={todo.key}>\n          <StyledToDoItem\n            isCrossed={todo.isCrossed}\n            onClick={() => crossToDo(index)}\n          >\n            {todo.value}\n          </StyledToDoItem>\n          <StyledInputSubmit type=\"submit\" color=\"primary\" onClick={() => deleteToDo(index)}>\n            Delete item\n          </StyledInputSubmit>\n        </Wrap>\n      ))}\n    </ListWrapper>\n  );\n}, (prevProps, nextProps) => prevProps.todos === nextProps.todos);\n\n// TODO: input error handling on empty value using Styled Components\n\nconst AppWrap = styled.div`\n  max-width: 600px;\n  margin: 60px auto;\n`;\n\nconst Home = () => {\n  const [value, setValue] = useState('');\n  const [todos, setTodos] = useState([]);\n  const [inputError, setInputError] = useState('');\n\n  function onFormSubmit(e) {\n    e.preventDefault();\n    if (!value) {\n      setInputError('Can not be empty');\n    } else {\n      const todo = {\n        value,\n        isCrossed: false,\n        key: `${value}${Math.random().toFixed(4)}`,\n      };\n      setTodos([...todos, todo]);\n      setValue('');\n    }\n  }\n\n  function onInputChange(e) {\n    setValue(e.target.value);\n    if (inputError) {\n      setInputError('');\n    }\n  }\n\n  function crossToDo(index) {\n    const oldToDos = [...todos];\n    oldToDos[index].isCrossed = !oldToDos[index].isCrossed;\n    setTodos(oldToDos);\n  }\n\n  function deleteToDo(index) {\n    const firstHalf = todos.slice(0, index);\n    const secondHalf = todos.slice(index + 1, todos.length);\n    setTodos([...firstHalf, ...secondHalf]);\n  }\n\n  const newTodoProps = {\n    onInputChange,\n    onFormSubmit,\n    value,\n    inputError,\n  };\n\n  const todoListProps = {\n    todos,\n    crossToDo,\n    deleteToDo,\n  };\n\n  return (\n    <AppWrap>\n      <NewToDo {...newTodoProps} />\n      <ToDoList {...todoListProps} />\n    </AppWrap>\n  );\n};\n\nToDoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.string.isRequired,\n    isCrossed: PropTypes.bool.isRequired,\n  })).isRequired,\n  crossToDo: PropTypes.func.isRequired,\n  deleteToDo: PropTypes.func.isRequired,\n};\n\nNewToDo.propTypes = {\n  onFormSubmit: PropTypes.func.isRequired,\n  onInputChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  inputError: PropTypes.string,\n};\n\nNewToDo.defaultProps = {\n  inputError: '',\n};\n\nexport default Home;\n\n/**\n * tic tac toe - Darkhan\n * calculator - Daniyar\n * instagram - Eugene\n * reddit - Merei\n * real time chat - Erkebulan\n * weather website - Togzhan\n * simplified trello(notion) - Aigul\n * advanced money converter - Maxat\n * classifieds site -\n * fake shop with cart -\n */\n","import React from 'react';\n\nexport default () => <h1>aboht</h1>;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nconst Wrap = styled.nav`\n  height: 60px;\n  position: fixed;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  padding: 0 20px;\n  box-sizing: border-box;\n  background: ${(props) => props.theme.colors.primary};\n  color: white;\n  display: flex;\n  align-items: center;\n  & > a {\n    margin: 0 5px;\n    text-decoration: none;\n  }\n  & > a:visited {\n    color: white;\n  }\n`;\n\nexport default () => (\n  <Wrap>\n    <Link to=\"/\">Home</Link>\n    <Link to=\"/about\">About</Link>\n  </Wrap>\n);\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { ThemeProvider } from 'emotion-theming';\nimport theme from './helpers/theme';\nimport Home from './components/pages/Home';\nimport About from './components/pages/About';\nimport Navbar from './components/organisms/Navbar';\n\nconst App = () => (\n  <BrowserRouter>\n    <ThemeProvider theme={theme}>\n      <Navbar />\n      <Switch>\n        <Route path=\"/\" component={Home} exact />\n        <Route path=\"/about\" component={About} exact />\n      </Switch>\n    </ThemeProvider>\n  </BrowserRouter>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}